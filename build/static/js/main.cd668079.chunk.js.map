{"version":3,"sources":["BaseStyles.tsx","DataRecord/SectionComponent.tsx","DataRecord/TextField.tsx","DataRecord/CountryField.tsx","DataRecord/AddressField.tsx","DataRecord/DateField.tsx","DataRecord/ImageField.tsx","DataRecord/JsonField.tsx","DataRecord/UrlField.tsx","DataRecord/EmailField.tsx","DataRecord/PhoneField.tsx","DataRecord/CurrencyField.tsx","DataRecord/ReferenceField.tsx","DataRecord/index.tsx","Orion.tsx","index.tsx"],"names":["primaryColor2","secondaryColor","actionColor","TextHeadline1","styled","h1","TextSection","h2","TextFieldLabel","label","TextBody1","p","Code","pre","OrionColumn","div","Container","Header","Body","Section","props","title","children","FieldContainer","TextField","content","CountryField","getUnicodeFlagIcon","getName","OpenMapAction","Googlemaps","Row","AddressField","onClick","window","open","encodeURIComponent","size","DateField","variant","moment","fromNow","format","ImageDisplay","img","AvatarDisplay","src","ImageField","alt","JsonField","JSON","stringify","OpenLinkAction","LinkExternal","UrlField","SendEmailAction","Email","CopyAction","Copy","Actions","EmailField","navigator","clipboard","writeText","err","console","error","alert","CallAction","PhoneOutgoing","WhatsappAction","Whatsapp","PhoneField","copyToClipboard","CurrencyField","Intl","NumberFormat","style","currency","parseFloat","ReferenceField","entity","data","schema","Array","isArray","map","item","index","log","DataRecord","useState","sections","setSections","useEffect","key","indexOf","section","push","getDataKeysForSection","fieldsKeys","isTitle","getTitle","type","OrionContainer","Orion","novaDoc","okrs","okr","okrsSchema","dataExplorerDoc","componentDocumentationSchema","dataRecordDoc","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd668079.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const primaryColor = \"rgb(0, 221, 255)\";\nexport const primaryColor2 = \"rgba(0, 221, 255, 0.6)\";\nexport const secondaryColor = \"rgb(255, 255, 255)\";\nexport const secondaryColor2 = \"rgba(255, 255, 255, 0.2)\";\nexport const actionColor = \"rgb(255, 98, 0)\";\nexport const actionColor2 = \"rgba(255, 98, 0, 0.2)\";\n\nexport const TextHeadline1 = styled.h1`\n    color: ${secondaryColor};\n    font-size: 32px;\n    font-weight: 500;\n    font-weight: 600;\n    line-height: 37px;\n    text-shadow: 2px 2px black;\n`;\n\nexport const TextSection = styled.h2`\n    font-size: 14px;\n    color: ${primaryColor2};\n    border-bottom: 1px solid;\n    padding-bottom: 2px;\n    font-weight: 700;\n    text-transform: uppercase;\n`;\n\nexport const TextFieldLabel = styled.label`\n    color: ${primaryColor2};\n    font-size: 12px;\n    font-weight: 600;\n    text-transform: uppercase;\n`;\n\nexport const TextBody1 = styled.p`\n    color: ${secondaryColor};\n    font-size: 16px;\n    font-weight: 500;\n    white-space: pre-line;\n`;\n\nexport const TextBody2 = styled.label`\n    color: ${secondaryColor2};\n    font-size: 10px;\n`;\n\nexport const Code = styled.pre`\n    font-family: monospace;\n    color: ${secondaryColor};\n    font-size: 10px;\n`;\n\nexport const OrionColumn = styled.div`\n    display: flex;\n    flex-direction: column;\n    max-height: 100%;\n    overflow-y: auto;\n    >*{\n        flex-shrink: 0;\n        margin-bottom: 20px;\n    }\n`;","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { \n    primaryColor2,\n    TextSection\n  } from \"BaseStyles\";\n\nconst Container = styled.div`\n    margin: 0px 0px 30px 0px;\n`;\n\nconst Header = styled.div`\n  border-bottom: 1px solid ${primaryColor2};\n`;\n\nconst Body = styled.div`\n  \n`;\n\nexport interface SectionProps {\n    title: string;\n    children?: any;\n}\n\nexport const Section = (props: SectionProps) => {\n    const {title} = props;\n\n    return (\n        <Container>\n          <Header>\n            <TextSection>{title}</TextSection>\n          </Header>\n          <Body>\n            {props.children}\n          </Body>\n      </Container>\n    )\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport { TextFieldLabel, TextBody1 } from \"BaseStyles\";\n\nexport interface TextFieldProps {\n    label: string;\n    content: string;\n}\n\nconst FieldContainer = styled.div``;\n\nexport const TextField = (props: TextFieldProps) => {\n    const {label, content} = props;\n\n    return (\n        <FieldContainer>\n            <TextFieldLabel>{label}</TextFieldLabel>\n            <TextBody1>{content}</TextBody1>\n        </FieldContainer>\n    )\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport getUnicodeFlagIcon from 'country-flag-icons/unicode'\nimport { TextFieldLabel, TextBody1 } from \"BaseStyles\";\nimport { getName } from'country-list';\n\nexport interface CountryFieldProps {\n    label: string;\n    content: string;\n}\n\nconst FieldContainer = styled.div`\n\n`;\n\nexport const CountryField = (props: CountryFieldProps) => {\n    const {label, content} = props;\n\n    return (\n        <FieldContainer>\n            <TextFieldLabel>{label}</TextFieldLabel>\n            <TextBody1>{getUnicodeFlagIcon(content)} {getName(content)}</TextBody1>\n        </FieldContainer>\n    )\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport { TextFieldLabel, TextBody1, actionColor } from \"BaseStyles\";\nimport { Googlemaps } from \"@styled-icons/simple-icons/Googlemaps\";\n\nexport interface AddressFieldProps {\n    label: string;\n    content: string;\n}\n\nconst FieldContainer = styled.div`\n\n`;\n\nconst OpenMapAction = styled(Googlemaps) `\n    color: ${actionColor};\n    cursor: pointer;\n    margin-left: 10px;\n`;\n\nconst Row = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n`;\n\nexport const AddressField = (props: AddressFieldProps) => {\n    const {label, content} = props;\n\n    const openInGoogleMaps = () => {\n        window.open(`https://www.google.com/maps/place/${encodeURIComponent(content)}`, '_blank');\n    }\n\n    return (\n        <FieldContainer>\n            <TextFieldLabel>{label}</TextFieldLabel>\n            <Row>\n                <TextBody1>{content}</TextBody1>\n                <OpenMapAction onClick={openInGoogleMaps} size={20} />\n            </Row>\n        </FieldContainer>\n    )\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport { TextFieldLabel, TextBody1 } from \"BaseStyles\";\n\nexport interface DateFieldProps {\n    label: string;\n    content: string;\n    variant: string;\n}\n\nconst FieldContainer = styled.div`\n\n`;\n\nexport const DateField = (props: DateFieldProps) => {\n    const {label, content, variant} = props;\n\n    switch(variant) {\n        case \"age\":\n            return (\n                <FieldContainer>\n                    <TextFieldLabel>{label}</TextFieldLabel>\n                    <TextBody1>{moment(content).fromNow(true)}</TextBody1>\n                </FieldContainer>\n            )\n        case \"countdown\":\n            return (\n                <FieldContainer>\n                    <TextFieldLabel>{label}</TextFieldLabel>\n                    <TextBody1>{moment(content).format(\"dddd, MMMM Do YYYY HH:mm\")} ({moment(content).fromNow()})</TextBody1>\n                </FieldContainer>\n            )\n        default:\n            return (\n                <FieldContainer>\n                    <TextFieldLabel>{label}</TextFieldLabel>\n                    <TextBody1>{moment(content).format(\"dddd, MMMM Do YYYY HH:mm\")}</TextBody1>\n                </FieldContainer>\n            )\n    }\n\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport { TextFieldLabel } from \"BaseStyles\";\n\nexport interface ImageFieldProps {\n    label: string;\n    content: string;\n    variant: string;\n    size: number;\n}\n\nconst FieldContainer = styled.div`\n\n`;\n\nconst ImageDisplay = styled.img`\n    width: 100%;\n`;\n\nconst AvatarDisplay = styled.div<{src: string, size: number}>`\n    display: block;\n    width: ${props => props.size}px;\n    height: ${props => props.size}px;\n    background: url(${props => props.src});\n    background-size: cover;\n    border-radius: ${props => props.size}px;\n`;\n\nexport const ImageField = (props: ImageFieldProps) => {\n    const {label, content, variant, size} = props;\n\n    switch(variant) {\n        case \"avatar\":\n            return (\n                <FieldContainer>\n                    <TextFieldLabel>{label}</TextFieldLabel>\n                    <AvatarDisplay src={content} size={size} />\n                </FieldContainer>\n            )\n        default:\n            return (\n                <FieldContainer>\n                    <TextFieldLabel>{label}</TextFieldLabel>\n                    <ImageDisplay src={content} alt={label} />\n                </FieldContainer>\n            )\n    }\n\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport { TextFieldLabel, Code } from \"BaseStyles\";\n\nexport interface JsonFieldProps {\n    label: string;\n    content: string;\n}\n\nconst FieldContainer = styled.div`\n\n`;\n\nexport const JsonField = (props: JsonFieldProps) => {\n    const {label, content} = props;\n\n    return (\n        <FieldContainer>\n            <TextFieldLabel>{label}</TextFieldLabel>\n            <Code>{JSON.stringify(content, null, 4)}</Code>\n        </FieldContainer>\n    )\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport { TextFieldLabel, TextBody1, actionColor } from \"BaseStyles\";\nimport { LinkExternal } from \"@styled-icons/boxicons-regular/LinkExternal\";\n\nexport interface UrlFieldProps {\n    label: string;\n    content: string;\n}\n\nconst FieldContainer = styled.div`\n\n`;\n\nconst OpenLinkAction = styled(LinkExternal) `\n    color: ${actionColor};\n    cursor: pointer;\n    margin-left: 10px;\n`;\n\nconst Row = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n`;\n\nexport const UrlField = (props: UrlFieldProps) => {\n    const {label, content} = props;\n\n    const openUrl = () => {\n        window.open(content);\n    }\n\n    return (\n        <FieldContainer>\n            <TextFieldLabel>{label}</TextFieldLabel>\n            <Row>\n                <TextBody1>{content}</TextBody1>\n                <OpenLinkAction onClick={openUrl} size={20} />\n            </Row>\n        </FieldContainer>\n    )\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport { TextFieldLabel, TextBody1, actionColor } from \"BaseStyles\";\nimport { Email } from \"@styled-icons/material-rounded/Email\";\nimport { Copy } from '@styled-icons/boxicons-regular/Copy';\n\nexport interface EmailFieldProps {\n    label: string;\n    content: string;\n}\n\nconst FieldContainer = styled.div`\n\n`;\n\nconst SendEmailAction = styled(Email) `\n    color: ${actionColor};\n    cursor: pointer;\n    margin-left: 10px;\n`;\n\nconst CopyAction = styled(Copy) `\n    color: ${actionColor};\n    cursor: pointer;\n    margin-left: 10px;\n`;\n\nconst Row = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n`;\n\nconst Actions = styled.div``;\n\nexport const EmailField = (props: EmailFieldProps) => {\n    const {label, content} = props;\n\n    const sendEmail = () => {\n        window.open(`mailto:${content}`);\n    }\n\n    const copyToClipboard = () => {\n        if (!navigator.clipboard) {\n            // Clipboard API not available\n            return;\n        }\n        try {\n            navigator.clipboard.writeText(content);\n        } catch (err) {\n            console.error('Failed to copy!', err)\n        }\n        alert('Email copied');\n    }\n\n    return (\n        <FieldContainer>\n            <TextFieldLabel>{label}</TextFieldLabel>\n            <Row>\n                <TextBody1>{content}</TextBody1>\n                <Actions>\n                    <CopyAction onClick={copyToClipboard} size={20} />\n                    <SendEmailAction onClick={sendEmail} size={20} />\n                </Actions>\n            </Row>\n        </FieldContainer>\n    )\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport { TextFieldLabel, TextBody1, actionColor } from \"BaseStyles\";\nimport { PhoneOutgoing } from \"@styled-icons/boxicons-regular/PhoneOutgoing\";\nimport { Copy } from '@styled-icons/boxicons-regular/Copy';\nimport { Whatsapp } from '@styled-icons/boxicons-logos/Whatsapp';\n\nexport interface PhoneFieldProps {\n    label: string;\n    content: string;\n    variant?: string;\n}\n\nconst FieldContainer = styled.div`\n\n`;\n\nconst CallAction = styled(PhoneOutgoing) `\n    color: ${actionColor};\n    cursor: pointer;\n    margin-left: 10px;\n`;\n\nconst CopyAction = styled(Copy) `\n    color: ${actionColor};\n    cursor: pointer;\n    margin-left: 10px;\n`;\n\nconst WhatsappAction = styled(Whatsapp) `\n    color: ${actionColor};\n    cursor: pointer;\n    margin-left: 10px;\n`;\n\nconst Row = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n`;\n\nconst Actions = styled.div``;\n\nexport const PhoneField = (props: PhoneFieldProps) => {\n    const {label, content, variant} = props;\n\n    const callPhone = () => {\n        window.open(`tel:${content}`);\n    }\n\n    const sendWhatsappMessage = () => {\n        window.open(`https://api.whatsapp.com/send?phone=${content}`);\n    }\n\n    const copyToClipboard = () => {\n        if (!navigator.clipboard) {\n            // Clipboard API not available\n            return;\n        }\n        try {\n            navigator.clipboard.writeText(content);\n        } catch (err) {\n            console.error('Failed to copy!', err)\n        }\n        alert('Phone number copied');\n    }\n\n    switch (variant) {\n        case 'whatsapp':\n            return (\n                <FieldContainer>\n                    <TextFieldLabel>{label}</TextFieldLabel>\n                    <Row>\n                        <TextBody1>{content}</TextBody1>\n                        <Actions>\n                            <CopyAction onClick={copyToClipboard} size={20} />\n                            <WhatsappAction onClick={sendWhatsappMessage} size={20} />\n                        </Actions>\n                    </Row>\n                </FieldContainer>\n            )\n        default:\n            return (\n                <FieldContainer>\n                    <TextFieldLabel>{label}</TextFieldLabel>\n                    <Row>\n                        <TextBody1>{content}</TextBody1>\n                        <Actions>\n                            <CopyAction onClick={copyToClipboard} size={20} />\n                            <CallAction onClick={callPhone} size={20} />\n                        </Actions>\n                    </Row>\n                </FieldContainer>\n            )\n    }\n\n}","import React from \"react\";\nimport styled from \"styled-components\";\nimport { TextFieldLabel, TextBody1 } from \"BaseStyles\";\n\nexport interface CurrencyFieldProps {\n    label: string;\n    content: string;\n    variant: string;\n}\n\nconst FieldContainer = styled.div``;\n\nexport const CurrencyField = (props: CurrencyFieldProps) => {\n    const {label, content, variant} = props;\n\n    return (\n        <FieldContainer>\n            <TextFieldLabel>{label}</TextFieldLabel>\n            <TextBody1>{new Intl.NumberFormat('pt-BR', { style: 'currency', currency: variant}).format(parseFloat(content))}</TextBody1>\n        </FieldContainer>\n    )\n}","import React from \"react\";\nimport { OrionColumn, TextFieldLabel } from \"BaseStyles\";\nimport { DataRecord } from \"DataRecord\";\n\nexport interface ReferenceFieldProps {\n    label: string;\n    entity: string;\n    data: any;\n    schema: any;\n}\n\nexport const ReferenceField = (props: ReferenceFieldProps) => {\n    const { entity, label, data, schema } = props;\n\n    return (\n        <>\n            <TextFieldLabel>{label}</TextFieldLabel>\n            <OrionColumn>\n                {Array.isArray(data) && data.map((item:any, index:number) => {\n                    console.log(item);\n                    return <DataRecord key={index} data={item} schema={schema} entity={entity}/>\n                })}\n                {!Array.isArray(data) && \n                    <DataRecord data={data} schema={schema} entity={entity}/>\n                }\n            </OrionColumn>\n        </>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n  TextHeadline1,\n  TextSection\n} from 'BaseStyles';\nimport { Section } from './SectionComponent';\nimport { TextField } from './TextField';\nimport { CountryField } from './CountryField';\nimport { AddressField } from './AddressField';\nimport { DateField } from './DateField';\nimport { ImageField }  from './ImageField';\nimport { JsonField } from './JsonField';\nimport { UrlField } from './UrlField';\nimport { EmailField } from './EmailField';\nimport { PhoneField } from './PhoneField';\nimport { CurrencyField } from './CurrencyField';\nimport { ReferenceField } from './ReferenceField';\n\nconst Container = styled.div`\n    padding: 20px;\n    max-height: 100%;\n    max-width: 500px;\n    overflow-y: auto;\n    overflow-x: hidden;\n    background: #00ffe70f;\n    border: 1px solid #00ffe714;\n`;\n\nexport interface DRField {\n    label: string;\n    content: string;\n}\n\nexport interface DRSection {\n    title: string;\n    fields: DRField[];\n}\n\nexport interface DataRecordModel {\n    title: string;\n    sections: DRSection[];\n}\n\nexport interface DRMessage {\n    action: string;\n    payload: any;\n}\n\ninterface DataRecordProps {\n    data: any,\n    schema: any,\n    entity: string\n}\n\nexport const DataRecord = (props:DataRecordProps) => {\n    const {data, schema, entity} = props;\n    const [sections, setSections] = useState<string[]>([])\n\n    useEffect(() => {\n        if (data && schema) {\n            let sections: string[] = [];\n            for (let key in schema) {\n                if (sections.indexOf(schema[key].section) === -1) {\n                    sections.push(schema[key].section);\n                }\n            };\n\n            setSections(sections);\n        }\n    },[data, schema]);\n\n    const getTitle = () => {\n        for (let key in schema) {\n            if (schema[key].isTitle) {\n                return data[key];\n            }\n        }\n    }\n\n    const getDataKeysForSection = (section:string) => {\n        const fieldsKeys = [];\n        for (let key in schema) {\n            if (schema[key].section === section) {\n                fieldsKeys.push(key);\n            }\n        }\n\n        return fieldsKeys;\n    }\n\n    return (\n        <Container>\n            <TextSection>{entity}</TextSection>\n            <TextHeadline1>{getTitle()}</TextHeadline1>\n            { sections.map((section, index) =>\n                <Section key={index} title={section}>\n                    {getDataKeysForSection(section).map(key => {\n                        if (!data[key]) {\n                            return null;\n                        }\n\n                        switch(schema[key].type) {\n                            case 'short-text':\n                                return <TextField key={key} label={schema[key].label} content={data[key]}/>\n                            case 'long-text':\n                                return <TextField key={key} label={schema[key].label} content={data[key]}/>\n                            case 'date':\n                                return <DateField key={key} label={schema[key].label} content={data[key]} variant={schema[key].variant}/>\n                            case 'country':\n                                return <CountryField key={key} label={schema[key].label} content={data[key]}/>\n                            case 'address':\n                                return <AddressField key={key} label={schema[key].label} content={data[key]}/>\n                            case 'image':\n                                return <ImageField key={key} label={schema[key].label} content={data[key]} variant={schema[key].variant} size={schema[key].size}/>\n                            case 'json':\n                                return <JsonField key={key} label={schema[key].label} content={data[key]}/>\n                            case 'url':\n                                return <UrlField key={key} label={schema[key].label} content={data[key]}/>\n                            case 'email':\n                                return <EmailField key={key} label={schema[key].label} content={data[key]}/>\n                            case 'phone':\n                                return <PhoneField key={key} label={schema[key].label} content={data[key]} variant={schema[key].variant}/>\n                            case 'currency':\n                                return <CurrencyField key={key} label={schema[key].label} content={data[key]} variant={schema[key].variant}/>\n                            case 'reference':\n                                return <ReferenceField key={key} label={schema[key].label} data={data[key]} schema={schema[key].schema} entity={schema[key].entity}/>\n                            default:\n                                return <TextField key={key} label={schema[key].label} content={data[key]}/>\n                        }\n                    })}\n                </Section>\n            )}\n        </Container>\n    );\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { DataRecord } from 'DataRecord';\n// import { NovaCoreConnection } from \"NovaCoreConnection\";\nimport { Socket } from \"socket.io-client\";\n// import {Youtube} from \"./Youtube\";\n\n// DOCS\nimport novaDoc from './Docs/Nova.json';\nimport dataRecordDoc from './Docs/DataRecordDoc.json';\nimport componentDocumentationSchema from './Schemas/ComponentDocumentation.json';\nimport okrs from './Docs/OKRs.json';\nimport okrsSchema from './Schemas/OKR.json';\nimport dataExplorerDoc from './Docs/DataExplorerDoc.json';\n\nconst OrionContainer = styled.div`\n    height: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: left;\n    align-items: top;\n    overflow-x: auto;\n    >*{\n        margin: 20px;\n        flex-shrink: 0;\n        z-index: 1;\n    }\n`;\n\n// const OrionBackground = styled.div`\n//     width: 100%;\n//     height: 100%;\n//     position: fixed;\n//     background: url(https://loremflickr.com/${window.screen.width}/${window.screen.height}/night/all);\n//     background-repeat: no-repeat;\n//     background-size: cover;\n//     z-index: 0;\n//     margin: -20px;\n//     top: 0;\n//     left: 0;\n//     opacity: 0.6;\n//     filter: blur(10px);\n// `;\n\nexport const Orion = () => {\n    const [socket, setSocket] = useState<Socket | undefined>();\n    \n    const handleSocketConnected = (socket:Socket) => {\n        socket.emit('execute', 'ifconfig');\n        setSocket(socket);\n    }\n\n    const handleSocketDisconnected = (socket:Socket) => {\n        setSocket(socket);\n    }\n\n    return (\n        <OrionContainer>\n            {/* <OrionBackground /> */}\n            {/* <NovaCoreConnection \n                handleSocketConnected={handleSocketConnected}\n                handleSocketDisconnected={handleSocketDisconnected}/> */}\n            <DataRecord data={novaDoc.data} schema={novaDoc.schema} entity={novaDoc.entity}/>\n            {okrs.data.map((okr, index) => {\n                return <DataRecord key={index} data={okr} schema={okrsSchema.schema} entity={okrsSchema.entity}/>\n            })}\n            <DataRecord data={dataExplorerDoc.data} schema={componentDocumentationSchema.schema} entity={componentDocumentationSchema.entity}/>\n            <DataRecord data={dataRecordDoc.data} schema={componentDocumentationSchema.schema} entity={componentDocumentationSchema.entity}/>\n            {/* <Youtube/> */}\n        </OrionContainer>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Orion } from \"./Orion\";\nimport './Nova.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Orion />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}