(this.webpackJsonpnova=this.webpackJsonpnova||[]).push([[0],{12:function(e){e.exports=JSON.parse('{"entity":"Component Documentation","schema":{"title":{"type":"text","label":"title","section":"meta","isTitle":true},"description":{"type":"text","label":"description","section":"meta"},"status":{"type":"text","label":"status","section":"Work to be done"},"assigned_to":{"type":"reference","label":"Assigned to","section":"Work to be done","entity":"Person","schema":{"name":{"type":"short-text","label":"Name","section":"Basic information","isTitle":true},"profile":{"type":"url","label":"Github profile","section":"links"},"telegram":{"type":"url","label":"Telegram account","section":"links"}}},"definition_of_done":{"type":"reference","label":"Definition of done","section":"Work to be done","entity":"Definition of done","schema":{"title":{"type":"short-text","label":"title","section":"meta","isTitle":true},"status":{"type":"long-text","label":"status","section":"meta"}}},"code_examples":{"type":"reference","label":"Examples","section":"Released work","entity":"Code example","schema":{"title":{"type":"text","label":"component","section":"example","isTitle":true},"schema":{"type":"json","label":"schema","section":"example"}}}}}')},14:function(e){e.exports=JSON.parse('{"entity":"NOVA Documentation","schema":{"title":{"type":"short-text","section":"meta","label":"title","isTitle":true},"description":{"type":"long-text","section":"meta","label":"Overview","isTitle":true},"github":{"type":"url","section":"meta","label":"Repository","isTitle":true},"telegram_group":{"type":"url","section":"meta","label":"Our Telegram Group","isTitle":true}},"data":{"title":"NOVA","description":"Nova is a open source tool for the non technical user to manage data, extract information and create automations.\\n\\nThis is not the finished product, we are on early development phase and this is being used as a sandbox to showcase the components and documentation of whar we are doing.\\n\\nPrinciples\\n- There is no back-end, all of the work must be done on the front-end or using external services.\\n- Eat your own dogfood, we need to develop this project to our own, to make our lives better, thats the best way to know that it will be usefull for other people like us.\\n- Focus on delivering one Objective (OKR).\\n- Experiment and have fun, this is not work, the main goal is to experiment, learn and have fun too!\\n\\nHow to contribute\\nYou are going to see in this screen the main OKRs of the project and the documentation of the components we are developing and their status, to contribute developing one of the components you should clone the project, and assign yourself to one of the TO DO components and send a Pull Request to our team, when we accept you PR you should create a new branch, develop and send the PR. All of our documentation will be here in the project and the comunication will be done in our Telegram group and Github PRs.\\n\\nThe folder structure\\n- Docs: Plain json files for the docs you see here.\\n- Schemas: Schema definitions\\n- BaseStyles.tsx: All of the main styles that is shared","github":"https://github.com/danielterra/nova","telegram_group":"https://t.me/joinchat/hk-QD1hl7Z8yMzg5"}}')},18:function(e){e.exports=JSON.parse('{"entity":"OKR","schema":{"objective":{"type":"short-text","label":"objective","section":"meta","isTitle":true},"keyResults":{"type":"reference","label":"Key Results","section":"Key Results","entity":"Key result","schema":{"title":{"type":"short-text","label":"Title","section":"meta","isTitle":true},"instruction":{"type":"long-text","label":"Instructions","section":"meta"}}}}}')},31:function(e){e.exports=JSON.parse('{"entity":"Component Documentation","data":{"title":"Data Record Component","description":"This component is designed to receive two par\xe2meters, a data, that is a flat json, and a schema, that describles how to render each of the keys in the json data, to render a human readable record. \\n\\nBelow you can see each of the schema types with examples.","status":"DOING","assigned_to":[{"name":"Daniel Terra","profile":"https://github.com/danielterra","telegram":"https://t.me/danielterra241088"}],"definition_of_done":[{"title":"User should be able to view attached files and download them"},{"title":"User should be abble to mark any field editable on the schema"},{"title":"User should be able to edit a short or long text field"},{"title":"User should be able to edit a date field"},{"title":"User should be able to edit a country field"},{"title":"User should be able to edit an address field"},{"title":"When the user is typing in an address field, it should display Google Maps suggestions"},{"title":"User should be able to edit a image field by uploading a new image"},{"title":"User should be able to edit a json field (ace editor)"},{"title":"User should be able to edit a url field"},{"title":"User should be able to edit a email field"},{"title":"User should be able to edit a json phone field"},{"title":"User should be able to edit a currency field"},{"title":"User should be able to edit a files field by uploading or removing files"}],"code_examples":[{"title":"short-text","schema":{"type":"short-text","label":"[the label]","section":"[the section]"}},{"title":"long-text","schema":{"type":"long-text","label":"[the label]","section":"[the section]"}},{"title":"date","schema":{"type":"date","variant":"[age|countdown|null]","label":"[the label]","section":"[the section]"}},{"title":"country","schema":{"type":"country","label":"[the label]","section":"[the section]"}},{"title":"address","schema":{"type":"address","label":"[the label]","section":"[the section]"}},{"title":"image","schema":{"type":"image","variant":"[avatar|null]","label":"[the label]","section":"[the section]","size":"[int] *for avatar only"}},{"title":"json","schema":{"type":"json","label":"[the label]","section":"[the section]"}},{"title":"url","schema":{"type":"url","label":"[the label]","section":"[the section]"}},{"title":"email","schema":{"type":"email","label":"[the label]","section":"[the section]"}},{"title":"phone","schema":{"type":"phone","variant":"[whatsapp, null]","label":"[the label]","section":"[the section]"}},{"title":"currency","schema":{"type":"currency","variant":"[USD|BRL|...] *the code of the currency","label":"[the label]","section":"[the section]"}}]}}')},32:function(e){e.exports=JSON.parse('{"data":[{"objective":"User should preffer to manage their expenses in NOVA instead of a spreadsheet","keyResults":[{"title":"User can do a CRUD of their expenses data manually","instruction":"Assisted test with 10 non technical users"},{"title":"User can answer how much he has to pay in a certain month","instruction":"Assisted test with 10 non technical users"},{"title":"User can automate to receive an email in the morning when he has any account to pay that day","instruction":"Assisted test with 10 non technical users"},{"title":"NPS (Net Promoter Score) above 7 (0-10)","instruction":"All users shoudl respond a NPS survey answering how likely they are to refer NOVA for a friend"}]}]}')},33:function(e){e.exports=JSON.parse('{"entity":"Component Documentation","data":{"title":"Data Explorer Component","description":"This component has the objective to let the user browse and manage their data repository.\\n\\nThis is done by using the browser IndexedDB to save plain json in a simple index database with ACID transactino support.\\n\\nThe system as a whole should be reactive, so we are implementing a process here that other components will send a message to this component, when the message is receive it will save the request on the DB, process it and emit an event response, this concept enables NOVA to be resilient in all operations, we can not trust that the browser will stey open, so we need to be able to get back on it when the user opens the browser again.","status":"DOING","assigned_to":[{"name":"Daniel Terra","profile":"https://github.com/danielterra","telegram":"https://t.me/danielterra241088"}],"definition_of_done":[{"title":"User should be abble to create a Schema","status":"TBD: We need to define the ontology base schema like RDF (Resource Description Framework)"},{"title":"User should be abble to browse the list of all available schemas","status":"WIP: It shows but we need to improve visuals for reference fields."},{"title":"When the User clicks on a schema, it should show all available DataRecords"},{"title":"When the user clicks on a Data Record, it should display it"},{"title":"User should be able to return at any point to the list of schemas and Data Record list"},{"title":"All data should be stored as plain JSON files on the user Google Drive Account","status":"WIP: Schemas can be saved on the Ontology colletion, we need to implement Google auth and do the sync between IndexedDB and Google Drive json files."}]}}')},49:function(e,t,n){},50:function(e,t,n){"use strict";n.r(t);var a,o,i,s,r,c,l,d,b,h,u,p,j,f,m,x,O,y,v,g,w,k,T,D,S,A,N,z,U,R,C,I,P,B,_,M,E,J=n(1),G=n.n(J),W=n(19),Y=n.n(W),F=n(7),K=n(3),V=n(2),H="rgba(0, 221, 255, 0.6)",q="rgb(255, 255, 255)",L="rgb(255, 98, 0)",Q=V.a.h1(a||(a=Object(K.a)(["\n    color: ",";\n    font-size: 32px;\n    font-weight: 500;\n    font-weight: 600;\n    line-height: 37px;\n    text-shadow: 2px 2px black;\n"])),q),Z=V.a.h2(o||(o=Object(K.a)(["\n    font-size: 14px;\n    color: ",";\n    border-bottom: 1px solid;\n    padding-bottom: 2px;\n    font-weight: 700;\n    text-transform: uppercase;\n"])),H),X=V.a.label(i||(i=Object(K.a)(["\n    color: ",";\n    font-size: 12px;\n    font-weight: 600;\n    text-transform: uppercase;\n"])),H),$=V.a.p(s||(s=Object(K.a)(["\n    color: ",";\n    font-size: 16px;\n    font-weight: 500;\n    white-space: pre-line;\n"])),q),ee=(V.a.label(r||(r=Object(K.a)(["\n    color: ",";\n    font-size: 10px;\n"])),"rgba(255, 255, 255, 0.2)"),V.a.pre(c||(c=Object(K.a)(["\n    font-family: monospace;\n    color: ",";\n    font-size: 10px;\n"])),q)),te=V.a.div(l||(l=Object(K.a)(["\n    display: flex;\n    flex-direction: column;\n    max-height: 100%;\n    overflow-y: auto;\n    >*{\n        flex-shrink: 0;\n        margin-bottom: 20px;\n    }\n"]))),ne=n(0),ae=V.a.div(d||(d=Object(K.a)(["\n    margin: 0px 0px 30px 0px;\n"]))),oe=V.a.div(b||(b=Object(K.a)(["\n  border-bottom: 1px solid ",";\n"])),H),ie=V.a.div(h||(h=Object(K.a)(["\n  \n"]))),se=function(e){var t=e.title;return Object(ne.jsxs)(ae,{children:[Object(ne.jsx)(oe,{children:Object(ne.jsx)(Z,{children:t})}),Object(ne.jsx)(ie,{children:e.children})]})},re=V.a.div(u||(u=Object(K.a)([""]))),ce=function(e){var t=e.label,n=e.content;return Object(ne.jsxs)(re,{children:[Object(ne.jsx)(X,{children:t}),Object(ne.jsx)($,{children:n})]})},le=n(35),de=n(23),be=V.a.div(p||(p=Object(K.a)(["\n\n"]))),he=function(e){var t=e.label,n=e.content;return Object(ne.jsxs)(be,{children:[Object(ne.jsx)(X,{children:t}),Object(ne.jsxs)($,{children:[Object(le.a)(n)," ",Object(de.getName)(n)]})]})},ue=n(24),pe=V.a.div(j||(j=Object(K.a)(["\n\n"]))),je=Object(V.a)(ue.a)(f||(f=Object(K.a)(["\n    color: ",";\n    cursor: pointer;\n    margin-left: 10px;\n"])),L),fe=V.a.div(m||(m=Object(K.a)(["\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n"]))),me=function(e){var t=e.label,n=e.content;return Object(ne.jsxs)(pe,{children:[Object(ne.jsx)(X,{children:t}),Object(ne.jsxs)(fe,{children:[Object(ne.jsx)($,{children:n}),Object(ne.jsx)(je,{onClick:function(){window.open("https://www.google.com/maps/place/".concat(encodeURIComponent(n)),"_blank")},size:20})]})]})},xe=n(11),Oe=n.n(xe),ye=V.a.div(x||(x=Object(K.a)(["\n\n"]))),ve=function(e){var t=e.label,n=e.content;switch(e.variant){case"age":return Object(ne.jsxs)(ye,{children:[Object(ne.jsx)(X,{children:t}),Object(ne.jsx)($,{children:Oe()(n).fromNow(!0)})]});case"countdown":return Object(ne.jsxs)(ye,{children:[Object(ne.jsx)(X,{children:t}),Object(ne.jsxs)($,{children:[Oe()(n).format("dddd, MMMM Do YYYY HH:mm")," (",Oe()(n).fromNow(),")"]})]});default:return Object(ne.jsxs)(ye,{children:[Object(ne.jsx)(X,{children:t}),Object(ne.jsx)($,{children:Oe()(n).format("dddd, MMMM Do YYYY HH:mm")})]})}},ge=V.a.div(O||(O=Object(K.a)(["\n\n"]))),we=V.a.img(y||(y=Object(K.a)(["\n    width: 100%;\n"]))),ke=V.a.div(v||(v=Object(K.a)(["\n    display: block;\n    width: ","px;\n    height: ","px;\n    background: url(",");\n    background-size: cover;\n    border-radius: ","px;\n"])),(function(e){return e.size}),(function(e){return e.size}),(function(e){return e.src}),(function(e){return e.size})),Te=function(e){var t=e.label,n=e.content,a=e.variant,o=e.size;switch(a){case"avatar":return Object(ne.jsxs)(ge,{children:[Object(ne.jsx)(X,{children:t}),Object(ne.jsx)(ke,{src:n,size:o})]});default:return Object(ne.jsxs)(ge,{children:[Object(ne.jsx)(X,{children:t}),Object(ne.jsx)(we,{src:n,alt:t})]})}},De=V.a.div(g||(g=Object(K.a)(["\n\n"]))),Se=function(e){var t=e.label,n=e.content;return Object(ne.jsxs)(De,{children:[Object(ne.jsx)(X,{children:t}),Object(ne.jsx)(ee,{children:JSON.stringify(n,null,4)})]})},Ae=n(27),Ne=V.a.div(w||(w=Object(K.a)(["\n\n"]))),ze=Object(V.a)(Ae.a)(k||(k=Object(K.a)(["\n    color: ",";\n    cursor: pointer;\n    margin-left: 10px;\n"])),L),Ue=V.a.div(T||(T=Object(K.a)(["\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n"]))),Re=function(e){var t=e.label,n=e.content;return Object(ne.jsxs)(Ne,{children:[Object(ne.jsx)(X,{children:t}),Object(ne.jsxs)(Ue,{children:[Object(ne.jsx)($,{children:n}),Object(ne.jsx)(ze,{onClick:function(){window.open(n)},size:20})]})]})},Ce=n(28),Ie=n(13),Pe=V.a.div(D||(D=Object(K.a)(["\n\n"]))),Be=Object(V.a)(Ce.a)(S||(S=Object(K.a)(["\n    color: ",";\n    cursor: pointer;\n    margin-left: 10px;\n"])),L),_e=Object(V.a)(Ie.a)(A||(A=Object(K.a)(["\n    color: ",";\n    cursor: pointer;\n    margin-left: 10px;\n"])),L),Me=V.a.div(N||(N=Object(K.a)(["\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n"]))),Ee=V.a.div(z||(z=Object(K.a)([""]))),Je=function(e){var t=e.label,n=e.content;return Object(ne.jsxs)(Pe,{children:[Object(ne.jsx)(X,{children:t}),Object(ne.jsxs)(Me,{children:[Object(ne.jsx)($,{children:n}),Object(ne.jsxs)(Ee,{children:[Object(ne.jsx)(_e,{onClick:function(){if(navigator.clipboard){try{navigator.clipboard.writeText(n)}catch(e){console.error("Failed to copy!",e)}alert("Email copied")}},size:20}),Object(ne.jsx)(Be,{onClick:function(){window.open("mailto:".concat(n))},size:20})]})]})]})},Ge=n(29),We=n(30),Ye=V.a.div(U||(U=Object(K.a)(["\n\n"]))),Fe=Object(V.a)(Ge.a)(R||(R=Object(K.a)(["\n    color: ",";\n    cursor: pointer;\n    margin-left: 10px;\n"])),L),Ke=Object(V.a)(Ie.a)(C||(C=Object(K.a)(["\n    color: ",";\n    cursor: pointer;\n    margin-left: 10px;\n"])),L),Ve=Object(V.a)(We.a)(I||(I=Object(K.a)(["\n    color: ",";\n    cursor: pointer;\n    margin-left: 10px;\n"])),L),He=V.a.div(P||(P=Object(K.a)(["\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n"]))),qe=V.a.div(B||(B=Object(K.a)([""]))),Le=function(e){var t=e.label,n=e.content,a=function(){if(navigator.clipboard){try{navigator.clipboard.writeText(n)}catch(e){console.error("Failed to copy!",e)}alert("Phone number copied")}};switch(e.variant){case"whatsapp":return Object(ne.jsxs)(Ye,{children:[Object(ne.jsx)(X,{children:t}),Object(ne.jsxs)(He,{children:[Object(ne.jsx)($,{children:n}),Object(ne.jsxs)(qe,{children:[Object(ne.jsx)(Ke,{onClick:a,size:20}),Object(ne.jsx)(Ve,{onClick:function(){window.open("https://api.whatsapp.com/send?phone=".concat(n))},size:20})]})]})]});default:return Object(ne.jsxs)(Ye,{children:[Object(ne.jsx)(X,{children:t}),Object(ne.jsxs)(He,{children:[Object(ne.jsx)($,{children:n}),Object(ne.jsxs)(qe,{children:[Object(ne.jsx)(Ke,{onClick:a,size:20}),Object(ne.jsx)(Fe,{onClick:function(){window.open("tel:".concat(n))},size:20})]})]})]})}},Qe=V.a.div(_||(_=Object(K.a)([""]))),Ze=function(e){var t=e.label,n=e.content,a=e.variant;return Object(ne.jsxs)(Qe,{children:[Object(ne.jsx)(X,{children:t}),Object(ne.jsx)($,{children:new Intl.NumberFormat("pt-BR",{style:"currency",currency:a}).format(parseFloat(n))})]})},Xe=function(e){var t=e.entity,n=e.label,a=e.data,o=e.schema;return Object(ne.jsxs)(ne.Fragment,{children:[Object(ne.jsx)(X,{children:n}),Object(ne.jsxs)(te,{children:[Array.isArray(a)&&a.map((function(e,n){return Object(ne.jsx)(et,{data:e,schema:o,entity:t},n)})),!Array.isArray(a)&&Object(ne.jsx)(et,{data:a,schema:o,entity:t})]})]})},$e=V.a.div(M||(M=Object(K.a)(["\n    padding: 20px;\n    max-height: 100%;\n    max-width: 500px;\n    overflow-y: auto;\n    overflow-x: hidden;\n    background: #00ffe70f;\n    border: 1px solid #00ffe714;\n"]))),et=function(e){var t=e.data,n=e.schema,a=e.entity,o=Object(J.useState)([]),i=Object(F.a)(o,2),s=i[0],r=i[1];Object(J.useEffect)((function(){if(t&&n){var e=[];for(var a in n)-1===e.indexOf(n[a].section)&&e.push(n[a].section);r(e)}}),[t,n]);var c=function(e){var t=[];for(var a in n)n[a].section===e&&t.push(a);return t};return Object(ne.jsxs)($e,{children:[Object(ne.jsx)(Z,{children:a}),Object(ne.jsx)(Q,{children:function(){for(var e in n)if(n[e].isTitle)return t[e]}()}),s.map((function(e,a){return Object(ne.jsx)(se,{title:e,children:c(e).map((function(e){if(!t[e])return null;switch(n[e].type){case"short-text":case"long-text":return Object(ne.jsx)(ce,{label:n[e].label,content:t[e]},e);case"date":return Object(ne.jsx)(ve,{label:n[e].label,content:t[e],variant:n[e].variant},e);case"country":return Object(ne.jsx)(he,{label:n[e].label,content:t[e]},e);case"address":return Object(ne.jsx)(me,{label:n[e].label,content:t[e]},e);case"image":return Object(ne.jsx)(Te,{label:n[e].label,content:t[e],variant:n[e].variant,size:n[e].size},e);case"json":return Object(ne.jsx)(Se,{label:n[e].label,content:t[e]},e);case"url":return Object(ne.jsx)(Re,{label:n[e].label,content:t[e]},e);case"email":return Object(ne.jsx)(Je,{label:n[e].label,content:t[e]},e);case"phone":return Object(ne.jsx)(Le,{label:n[e].label,content:t[e],variant:n[e].variant},e);case"currency":return Object(ne.jsx)(Ze,{label:n[e].label,content:t[e],variant:n[e].variant},e);case"reference":return Object(ne.jsx)(Xe,{label:n[e].label,data:t[e],schema:n[e].schema,entity:n[e].entity},e);default:return Object(ne.jsx)(ce,{label:n[e].label,content:t[e]},e)}}))},a)}))]})},tt=n(8),nt=n(6),at=n.n(nt),ot=n(9),it=n(34),st={title:{type:"short-text",section:"meta",label:"title",isTitle:!0},description:{type:"short-text",section:"meta",label:"description"},version:{type:"short-text",section:"meta",label:"version"},entities:{type:"json",section:"meta",label:"Entities"},transactions:{type:"json",section:"meta",label:"transactions"}},rt=function(){var e=Object(J.useState)({title:"Data Explorer",description:"This represent the database showing the entities and operations logs"}),t=Object(F.a)(e,2),n=t[0],a=t[1],o=Object(J.useState)(),i=Object(F.a)(o,2),s=i[0],r=i[1],c=Object(J.useState)([]),l=Object(F.a)(c,2),d=l[0],b=l[1],h=function(){var e=Object(ot.a)(at.a.mark((function e(){var t;return at.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Object(it.a)("NOVA",2,{upgrade:function(e){(e.objectStoreNames.contains("ontology")||e.createObjectStore("ontology",{keyPath:"name"}),e.objectStoreNames.contains("dbTransactions"))||e.createObjectStore("dbTransactions",{keyPath:"id"}).createIndex("recentBased","startedAt")},blocked:function(){console.error(" Called if there are older versions of the database open on the origin, so this version cannot open. This is similar to the blocked event in plain IndexedDB")},blocking:function(){console.error("Called if this connection is blocking a future version of the database from opening. This is similar to the versionchange event in plain IndexedDB.")},terminated:function(){console.error("Called if the browser abnormally terminates the connection, but not on regular closures like calling db.close(). This is similar to the close event in plain IndexedDB.")}});case 2:t=e.sent,r(t);case 4:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}(),u=function(){var e=function(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)};return e()+e()+"-"+e()+"-"+e()+"-"+e()+"-"+e()+e()+e()};Object(J.useEffect)((function(){if(s){var e=Object.values(s.objectStoreNames).map((function(e){return{name:e}}));a(Object(tt.a)(Object(tt.a)({},n),{},{entities:e,version:s.version})),j(),p()}}),[s]),Object(J.useEffect)((function(){h()}),[]);var p=function(){var e=Object(ot.a)(at.a.mark((function e(){var t,n;return at.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(s){e.next=2;break}return e.abrupt("return");case 2:return e.next=4,s.getAll("dbTransactions");case 4:if(t=e.sent,console.log(t),n=t.filter((function(e){return!e.completed})).pop(),console.log(n),n){e.next=10;break}return e.abrupt("return");case 10:e.t0=n.operation,e.next="add"===e.t0?13:26;break;case 13:return e.prev=13,e.next=16,s.add(n.collection,n.value);case 16:e.next=21;break;case 18:e.prev=18,e.t1=e.catch(13),n.error=e.t1.toString();case 21:return n.completed=!0,n.endedAt=new Date,e.next=25,s.put("dbTransactions",n);case 25:case 26:return e.abrupt("break",27);case 27:j();case 28:case"end":return e.stop()}}),e,null,[[13,18]])})));return function(){return e.apply(this,arguments)}}(),j=function(){var e=Object(ot.a)(at.a.mark((function e(){var t;return at.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(s){e.next=2;break}return e.abrupt("return");case 2:return e.next=4,s.getAll("dbTransactions");case 4:return e.next=6,e.sent.sort((function(e,t){return e.startedAt<t.startedAt?1:e.startedAt>t.startedAt?-1:0})).slice(0,10);case 6:t=e.sent,b(t);case 8:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}(),f=function(){var e=Object(ot.a)(at.a.mark((function e(){return at.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(s){e.next=2;break}return e.abrupt("return");case 2:return e.next=4,s.add("dbTransactions",{id:u(),collection:"ontology",operation:"add",value:{name:"person"},completed:!1,startedAt:new Date});case 4:return e.next=6,j();case 6:p();case 7:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}();return Object(ne.jsxs)(te,{children:[Object(ne.jsx)("button",{onClick:f,children:"teste"}),Object(ne.jsx)(et,{data:Object(tt.a)(Object(tt.a)({},n),{},{transactions:d}),schema:st,entity:"Database Component"})]})},ct=n(14),lt=n(31),dt=n(12),bt=n(32),ht=n(18),ut=n(33),pt=V.a.div(E||(E=Object(K.a)(["\n    height: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: left;\n    align-items: top;\n    overflow-x: auto;\n    >*{\n        margin: 20px;\n        flex-shrink: 0;\n        z-index: 1;\n    }\n"]))),jt=function(){var e=Object(J.useState)(),t=Object(F.a)(e,2);t[0],t[1];return Object(ne.jsxs)(pt,{children:[Object(ne.jsx)(et,{data:ct.data,schema:ct.schema,entity:ct.entity}),bt.data.map((function(e,t){return Object(ne.jsx)(et,{data:e,schema:ht.schema,entity:ht.entity},t)})),Object(ne.jsx)(et,{data:ut.data,schema:dt.schema,entity:dt.entity}),Object(ne.jsx)(rt,{}),Object(ne.jsx)(et,{data:lt.data,schema:dt.schema,entity:dt.entity})]})};n(49);Y.a.render(Object(ne.jsx)(G.a.StrictMode,{children:Object(ne.jsx)(jt,{})}),document.getElementById("root"))}},[[50,1,2]]]);
//# sourceMappingURL=main.1e7e0374.chunk.js.map